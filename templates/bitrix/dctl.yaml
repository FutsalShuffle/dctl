version: 1
name: projectName

docker:
  enabled: true
  registry: "" #Для CI/CD

k8:
  enabled: false

containers:
  nginx:
    ports:
      - "${HTTP_PORT}:80"
    build:
      context: ./.dctl/containers/nginx
      dockerfile: ./Dockerfile
      args:
        USER_ID: "$USER_ID"
        GROUP_ID: "$GROUP_ID"
        PROJECT_PREFIX: "$PROJECT_PREFIX"
    depends_on:
      - mysql
    volumes:
      - .:/var/www/html
      - ./.dctl/logs/nginx:/var/log/nginx
    links:
      - php
    restart: unless-stopped
    environment:
      - APP_ENV=${APP_ENV}
      - PROJECT_PREFIX=${PROJECT_PREFIX}

  php:
    build:
      context: ./.dctl/containers/php
      dockerfile: ./Dockerfile
      args:
        USER_ID: "$USER_ID"
        GROUP_ID: "$GROUP_ID"
    volumes:
      - .:/var/www/html
      - ./.dctl/logs/php:/var/log/php
      - ./.dctl/data/sessions:/var/www/sessions
    links:
      - mysql
    restart: unless-stopped
    environment:
      APP_ENV: ${APP_ENV}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: ${MYSQL_HOST}
      PROJECT_PREFIX: "$PROJECT_PREFIX"

  mysql:
    build:
      context: ./.dctl/containers/mysql
      dockerfile: ./Dockerfile
      args:
        USER_ID: ${USER_ID}
        GROUP_ID: ${GROUP_ID}
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - ./.dctl/logs/mysql:/var/log/mysql
      - ./.dctl/data/mysql:/var/lib/mysql
    restart: unless-stopped

commands:
  db:
    vendor: mysql
    container: mysql
  run:
    container: php
  extra:
    - name: init-env
      command: cp .env.example .env && ln -n .env ./../.env
