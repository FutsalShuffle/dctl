{{ $deploymentName := .Name }}{{$deployment := .Deployment }}{{$projectName := .ProjectName -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{$projectName}}-{{.Name}}
  name: {{$projectName}}-{{.Name}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{$projectName}}-{{.Name}}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{$projectName}}-{{.Name}}
    spec:
      replicas: {{ or .Deployment.Replicas 1 }}
      {{- if or .Deployment.EmptyDir.Enabled .Deployment.Pvc }}
      securityContext:
        fsGroup: 1000
      {{- end}}
      containers:
          {{- range $containerName, $container := .Deployment.Containers}}
          - name: {{$projectName}}-{{$deploymentName}}-{{$containerName}}
            image: {{.Image}}
            ports:
            {{- if $container.Ports }}
            {{- range $port := $container.Ports }}
              - containerPort: {{ getPortTwo $port }}
            {{ end }}{{- end }}
            imagePullPolicy: Always
            volumeMounts:
              {{- if .EmptyDir.Enabled }}
              - mountPath: {{ .EmptyDir.MountPath }}
                name: emptydir-volume
              {{- end }}
            {{if $container.Pvc}}{{ range $index, $value := $container.Pvc}}
              - mountPath: {{ $value.MountPath }}
                name: {{$deploymentName}}-persistant-{{$value.Name}}{{end}}{{end}}
            {{- if .Env }}
            env:
              {{- range $name, $value := .Env }}
              - name: {{$name}}
                value: {{$value}}{{end -}}
              {{end}}
            resources:
              {{- if or .Resources.Requests.Memory $container.Resources.Requests.Cpu }}
              requests:
                memory: {{ .Resources.Requests.Memory }}
                cpu: {{ .Resources.Requests.Cpu }}
              {{- end}}
              {{- if or .Resources.Limits.Memory $container.Resources.Limits.Cpu }}
              limits:
                memory: {{ .Resources.Limits.Memory }}
                cpu: {{ .Resources.Limits.Cpu }}
              {{- end}}
            lifecycle:
              {{if or .Lifecycle.PostStart.Exec.Command .Lifecycle.PostStart.HttpGet.Host}}postStart:
                {{if .Lifecycle.PostStart.Exec.Command}}command: {{range $command := .Lifecycle.PostStart.Exec.Command}}
                  - {{$command}}{{end}}
                {{end -}}
              {{end -}}
              {{if or .Lifecycle.PreStop.Exec.Command .Lifecycle.PreStop.HttpGet.Host}}preStop:
                {{if .Lifecycle.PreStop.Exec.Command}}command: {{range $command := .Lifecycle.PreStop.Exec.Command}}
                  - {{$command}}{{end}}
                {{end -}}
              {{end -}}
        {{- end}}
      restartPolicy: {{ or .Deployment.Restart "Always" }}
      hostAliases:
        - ip: 127.0.0.1
          hostnames:
            {{range $containerName, $container := .Deployment.Containers}}- {{$containerName}}
            {{end}}
      volumes:
        {{- if .Deployment.EmptyDir.Enabled }}
        - name: emptydir-volume
          emptyDir: {{if .Deployment.EmptyDir.SizeLimit}}
            sizeLimit: {{or .Deployment.EmptyDir.SizeLimit "512Mi" }}{{end}}
        {{ end }}
        {{- if $deployment.Pvc}}{{ range $index, $value := .Deployment.Pvc }}
        - name: {{$deploymentName}}-persistant-{{$value.Name}}
          persistentVolumeClaim:
            claimName: {{$deploymentName}}-pvc-{{$value.Name}}
            {{end}}{{end}}
      initContainers:
      {{- if .Deployment.Pvc }}
        - name: volume-pvc-permission-set
          image: busybox:1.31.1
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0
          command: [ "/bin/sh", "-c" ]
          args:
            - /bin/chown 0:1000 {{- range $key, $container := .Deployment.Containers }}{{- range $keyPvc, $pvc := $container.Pvc }} {{ $pvc.MountPath }} {{- end }}{{- end }} &&
              /bin/chmod 775 {{- range $key, $container := .Deployment.Containers }}{{- range $keyPvc, $pvc := $container.Pvc }} {{ $pvc.MountPath }} {{- end }}{{- end }}
          volumeMounts:
       {{- range $key, $container := .Deployment.Containers }}{{- range $keyPvc, $pvc := $container.Pvc }}
        - name: {{$pvc.Name}}
          mountPath: {{ $pvc.MountPath }}
        {{ end }}{{- end }}
        {{- end }}
        {{- if .Deployment.EmptyDir.Enabled }}
        - name: emptydir-permission-set
          image: busybox:1.31.1
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0
          command: [ "/bin/sh", "-c" ]
          args:
            - /bin/chown -R 0:1000 /emptyDir &&
              /bin/chmod -R 1775 /emptyDir
          volumeMounts:
            - name: emptydir-volume
              mountPath: "/emptyDir"
        {{- end }}
